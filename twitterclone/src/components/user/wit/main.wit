package golem:user;

interface user-api {
    // record post {
    //     userid: string,
    //     username: string,
    //     content: string,
    //     posted: string,
    //     likes: u32,
    // }

    record user {
        userid: string,
        username: string,
        image: option<string>,
        following: list<string>
    }

    login: func(username: string) -> user;
    follow: func(userid: string);
    add-follower: func(userid: string);
    get-timeline: func(userid: string) -> list<string>;
}

world user {
  // Golem dependencies
  import golem:api/host@0.2.0;
  import golem:rpc/types@0.1.0;

  // WASI dependencies
  import wasi:blobstore/blobstore;
  import wasi:blobstore/container;
  import wasi:cli/environment@0.2.0;
  import wasi:clocks/wall-clock@0.2.0;
  import wasi:clocks/monotonic-clock@0.2.0;
  import wasi:filesystem/preopens@0.2.0;
  import wasi:filesystem/types@0.2.0;
  import wasi:http/types@0.2.0;
  import wasi:http/outgoing-handler@0.2.0;
  import wasi:io/error@0.2.0;
  import wasi:io/poll@0.2.0;
  import wasi:io/streams@0.2.0;
  import wasi:logging/logging;
  import wasi:random/random@0.2.0;
  import wasi:random/insecure@0.2.0;
  import wasi:random/insecure-seed@0.2.0;
  import wasi:sockets/ip-name-lookup@0.2.0;
  import wasi:sockets/instance-network@0.2.0;

  // Project Component dependencies
  import golem:post-stub/stub-post;
  // import golem:userproxy-stub/stub-userproxy;

  export user-api;
}